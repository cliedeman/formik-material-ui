"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[681],{91:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>m,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var o=i(4848),t=i(8453);const l={id:"mui",title:"MUI"},a=void 0,r={id:"api/mui",title:"MUI",description:"The following props are always excluded: name, value, error, and additional ones where it makes sense.",source:"@site/docs/api/mui.md",sourceDirName:"api",slug:"/api/mui",permalink:"/formik-mui/docs/api/mui",draft:!1,unlisted:!1,editUrl:"https://github.com/stackworx/formik-mui/edit/main/docs/api/mui.md",tags:[],version:"current",frontMatter:{id:"mui",title:"MUI"},sidebar:"someSidebar",previous:{title:"FAQ",permalink:"/formik-mui/docs/guide/faq"},next:{title:"MUI X Date and Time Pickers",permalink:"/formik-mui/docs/api/mui-x-date-pickers"}},m={},c=[{value:"Autocomplete",id:"autocomplete",level:2},{value:"Example",id:"example",level:4},{value:"MUI Autocomplete Documentation",id:"mui-autocomplete-documentation",level:4},{value:"Checkbox",id:"checkbox",level:2},{value:"Example",id:"example-1",level:4},{value:"MUI Checkbox Documentation",id:"mui-checkbox-documentation",level:4},{value:"CheckboxWithLabel",id:"checkboxwithlabel",level:2},{value:"Example",id:"example-2",level:4},{value:"MUI Documentation",id:"mui-documentation",level:4},{value:"InputBase",id:"inputbase",level:2},{value:"Example",id:"example-3",level:4},{value:"MUI InputBase Documentation",id:"mui-inputbase-documentation",level:4},{value:"RadioGroup",id:"radiogroup",level:2},{value:"Example",id:"example-4",level:4},{value:"MUI RadioGroup Documentation",id:"mui-radiogroup-documentation",level:4},{value:"Select",id:"select",level:2},{value:"Example",id:"example-5",level:4},{value:"MUI Select Documentation",id:"mui-select-documentation",level:4},{value:"SimpleFileUpload",id:"simplefileupload",level:2},{value:"Example",id:"example-6",level:4},{value:"API",id:"api",level:4},{value:"Switch",id:"switch",level:2},{value:"MUI Switch Documentation",id:"mui-switch-documentation",level:4},{value:"TextField",id:"textfield",level:2},{value:"Example",id:"example-7",level:4},{value:"MUI TextField Documentation",id:"mui-textfield-documentation",level:4},{value:"ToggleButtonGroup",id:"togglebuttongroup",level:2},{value:"Example",id:"example-8",level:4},{value:"MUI ToggleButtonGroup Documentation",id:"mui-togglebuttongroup-documentation",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h4:"h4",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The following props are always excluded: ",(0,o.jsx)(n.code,{children:"name"}),", ",(0,o.jsx)(n.code,{children:"value"}),", ",(0,o.jsx)(n.code,{children:"error"}),", and additional ones where it makes sense."]}),"\n",(0,o.jsx)(n.h2,{id:"autocomplete",children:"Autocomplete"}),"\n",(0,o.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { Autocomplete } from 'formik-mui';\n\nconst options = [{ title: 'The Shawshank Redemption', year: 1994 }, ...]\n\n<Field\n  name=\"name\"\n  component={Autocomplete}\n  options={options}\n  getOptionLabel={(option: Movie) => option.title}\n  style={{ width: 300 }}\n  renderInput={(params: AutocompleteRenderInputParams) => (\n    <TextField\n      {...params}\n      // We have to manually set the corresponding fields on the input component\n      name=\"name\"\n      error={touched['name'] && !!errors['name']}\n      helperText={errors['name']}\n      label=\"Autocomplete\"\n      variant=\"outlined\"\n    />\n  )}\n/>;\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Note the manual inclusion of the error."})}),"\n",(0,o.jsx)(n.h4,{id:"mui-autocomplete-documentation",children:(0,o.jsx)(n.a,{href:"https://mui.com/api/autocomplete/",children:"MUI Autocomplete Documentation"})}),"\n",(0,o.jsx)(n.h2,{id:"checkbox",children:"Checkbox"}),"\n",(0,o.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import { Checkbox } from \'formik-mui\';\n\n<Field component={Checkbox} type="checkbox" name="checked" />;\n'})}),"\n",(0,o.jsx)(n.h4,{id:"mui-checkbox-documentation",children:(0,o.jsx)(n.a,{href:"https://mui.com/api/checkbox/",children:"MUI Checkbox Documentation"})}),"\n",(0,o.jsx)(n.h2,{id:"checkboxwithlabel",children:"CheckboxWithLabel"}),"\n",(0,o.jsxs)(n.p,{children:["A convenience wrapper that adds label to ",(0,o.jsx)(n.code,{children:"Checkbox"})," using ",(0,o.jsx)(n.code,{children:"FormControlLabel"}),". Supports all the same properties as ",(0,o.jsx)(n.code,{children:"Checkbox"})," and accepts an additional ",(0,o.jsx)(n.code,{children:"Label"})," prop, which are props applied to ",(0,o.jsx)(n.code,{children:"FormControlLabel"}),"."]}),"\n",(0,o.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { CheckboxWithLabel } from 'formik-mui';\n\n<Field\n  component={CheckboxWithLabel}\n  type=\"checkbox\"\n  name=\"checked\"\n  Label={{ label: 'Checkbox' }}\n/>;\n"})}),"\n",(0,o.jsx)(n.h4,{id:"mui-documentation",children:(0,o.jsx)(n.a,{href:"https://mui.com/api/form-control-label/",children:"MUI Documentation"})}),"\n",(0,o.jsx)(n.h2,{id:"inputbase",children:"InputBase"}),"\n",(0,o.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { InputBase } from 'formik-mui';\n\n<Field component={InputBase} name=\"inputBase\" />;\n"})}),"\n",(0,o.jsx)(n.h4,{id:"mui-inputbase-documentation",children:(0,o.jsx)(n.a,{href:"https://mui.com/api/input-base/",children:"MUI InputBase Documentation"})}),"\n",(0,o.jsx)(n.h2,{id:"radiogroup",children:"RadioGroup"}),"\n",(0,o.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import { FormControlLabel, Radio, LinearProgress } from \'@mui/material/core\';\nimport { Formik, Field } from \'formik\';\nimport { RadioGroup } from \'formik-mui\';\n\n<Formik {...otherProps}>\n  {({ isSubmitting }) => (\n    <Field component={RadioGroup} name="activity">\n      <FormControlLabel\n        value="painting"\n        control={<Radio disabled={isSubmitting} />}\n        label="Painting"\n        disabled={isSubmitting}\n      />\n      <FormControlLabel\n        value="drawing"\n        control={<Radio disabled={isSubmitting} />}\n        label="Drawing"\n        disabled={isSubmitting}\n      />\n      <FormControlLabel\n        value="none"\n        control={<Radio disabled={isSubmitting} />}\n        label="None"\n        disabled\n      />\n    </Field>\n  )}\n</Formik>;\n'})}),"\n",(0,o.jsx)(n.h4,{id:"mui-radiogroup-documentation",children:(0,o.jsx)(n.a,{href:"https://mui.com/api/radio-group/",children:"MUI RadioGroup Documentation"})}),"\n",(0,o.jsx)(n.h2,{id:"select",children:"Select"}),"\n",(0,o.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { Field } from 'formik';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { Select } from 'formik-mui';\n\n<Field\n  component={Select}\n  formControl={{ sx: sxFormControl }}\n  formHelperText={{ children: 'How old are you?' }}\n  id=\"age\"\n  name=\"age\"\n  labelId=\"age-simple\"\n  label=\"Age\"\n  validate={(age: number) =>\n    !age\n      ? 'Please enter your age'\n      : age < 21\n      ? 'You must be 21 or older'\n      : undefined\n  }\n>\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Field>;\n"})}),"\n",(0,o.jsx)(n.h4,{id:"mui-select-documentation",children:(0,o.jsx)(n.a,{href:"https://mui.com/api/select/",children:"MUI Select Documentation"})}),"\n",(0,o.jsx)(n.h2,{id:"simplefileupload",children:"SimpleFileUpload"}),"\n",(0,o.jsx)(n.h4,{id:"example-6",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import { SimpleFileUpload } from \'formik-mui\';\n\n<Field component={SimpleFileUpload} name="file" label="Simple File Upload" />;\n'})}),"\n",(0,o.jsx)(n.h4,{id:"api",children:"API"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"interface SimpleFileUploadProps {\n  name: string; // Field Name\n  label: string; // Field Label\n  disabled?: boolean;\n  // Customize the Input Component\n  InputProps?: Omit<InputProps, 'name' | 'type' | 'label'>;\n  // Customize the Input Label Component\n  InputLabelProps?: InputLabelProps;\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"switch",children:"Switch"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import { Switch } from \'formik-mui\';\n\n<Field component={Switch} type="checkbox" name="switch" />;\n'})}),"\n",(0,o.jsx)(n.h4,{id:"mui-switch-documentation",children:(0,o.jsx)(n.a,{href:"https://mui.com/api/switch/",children:"MUI Switch Documentation"})}),"\n",(0,o.jsx)(n.h2,{id:"textfield",children:"TextField"}),"\n",(0,o.jsx)(n.h4,{id:"example-7",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import { TextField } from \'formik-mui\';\n\n<Field\n  component={TextField}\n  label="Outlined"\n  name="outlined"\n  variant="outlined"\n  InputProps={{ notched: true }}\n/>;\n'})}),"\n",(0,o.jsx)(n.h4,{id:"mui-textfield-documentation",children:(0,o.jsx)(n.a,{href:"https://mui.com/api/text-field/",children:"MUI TextField Documentation"})}),"\n",(0,o.jsx)(n.h2,{id:"togglebuttongroup",children:"ToggleButtonGroup"}),"\n",(0,o.jsx)(n.h4,{id:"example-8",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import FormatAlignCenterIcon from \'@mui/icons-material/FormatAlignCenter\';\nimport FormatAlignJustifyIcon from \'@mui/icons-material/FormatAlignJustify\';\nimport FormatAlignLeftIcon from \'@mui/icons-material/FormatAlignLeft\';\nimport FormatAlignRightIcon from \'@mui/icons-material/FormatAlignRight\';\nimport ToggleButton from \'@mui/material/ToggleButton\';\nimport { ToggleButtonGroup } from \'formik-mui\';\n\n<Field component={ToggleButtonGroup} name="name" type="checkbox">\n  <ToggleButton value="left" aria-label="left aligned">\n    <FormatAlignLeftIcon />\n  </ToggleButton>\n  <ToggleButton value="center" aria-label="centered">\n    <FormatAlignCenterIcon />\n  </ToggleButton>\n  <ToggleButton value="right" aria-label="right aligned">\n    <FormatAlignRightIcon />\n  </ToggleButton>\n  <ToggleButton value="justify" aria-label="justified" disabled>\n    <FormatAlignJustifyIcon />\n  </ToggleButton>\n</Field>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.em,{children:["Note the ",(0,o.jsx)(n.code,{children:"type=checkbox"})," attribute."]})}),"\n",(0,o.jsx)(n.h4,{id:"mui-togglebuttongroup-documentation",children:(0,o.jsx)(n.a,{href:"https://mui.com/api/toggle-button-group/",children:"MUI ToggleButtonGroup Documentation"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var o=i(6540);const t={},l=o.createContext(t);function a(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);