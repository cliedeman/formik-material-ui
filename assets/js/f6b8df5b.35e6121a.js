"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[522],{2897:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var o=n(4848),i=n(8453);const s={id:"custom-component",title:"Creating Custom Components"},r="Notes",c={id:"guide/custom-component",title:"Creating Custom Components",description:"Wrappers have a corresponding function export (fieldToTextField, fieldToCheckbox etc.) that encapsulates the logic used to map Formik props into the MUI shapes.",source:"@site/docs/guide/custom-component.md",sourceDirName:"guide",slug:"/guide/custom-component",permalink:"/formik-mui/docs/guide/custom-component",draft:!1,unlisted:!1,editUrl:"https://github.com/stackworx/formik-mui/edit/main/docs/guide/custom-component.md",tags:[],version:"current",frontMatter:{id:"custom-component",title:"Creating Custom Components"},sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/formik-mui/docs/guide/getting-started"},next:{title:"Migrating",permalink:"/formik-mui/docs/guide/migrating"}},a={},d=[{value:"Upper Casing Field",id:"upper-casing-field",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"notes",children:"Notes"})}),"\n",(0,o.jsxs)(t.p,{children:["Wrappers have a corresponding function export (",(0,o.jsx)(t.code,{children:"fieldToTextField"}),", ",(0,o.jsx)(t.code,{children:"fieldToCheckbox"})," etc.) that encapsulates the logic used to map Formik props into the MUI shapes."]}),"\n",(0,o.jsx)(t.h1,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(t.h2,{id:"upper-casing-field",children:"Upper Casing Field"}),"\n",(0,o.jsx)(t.p,{children:"A simple test input that always uppercases the input:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import TextField from '@mui/material/TextField';\nimport { fieldToTextField, TextFieldProps } from 'formik-mui';\n\nfunction UpperCasingTextField(props: TextFieldProps) {\n  const {\n    form: { setFieldValue },\n    field: { name },\n  } = props;\n  const onChange = React.useCallback(\n    (event) => {\n      const { value } = event.target;\n      setFieldValue(name, value ? value.toUpperCase() : '');\n    },\n    [setFieldValue, name]\n  );\n  return <TextField {...fieldToTextField(props)} onChange={onChange} />;\n}\n"})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var o=n(6540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);